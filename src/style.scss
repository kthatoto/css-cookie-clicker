@use "sass:math";

:root {
  --left: 500px;
  --cookie-size: 200px;
}

body {
  background-color: #cccccc;
}

.result::after {
  content: "クッキー：" counter(cookies) "枚";
}

.cookie {
  width: var(--cookie-size);
  height: var(--cooike-size);
  border-radius: 50%;
  position: relative;
  counter-reset: cookies 0;
  display: flex;

  .icon {
    align-self: center;
    font-size: var(--cookie-size);
    line-height: var(--cookie-size);
    width: 100%;
    height: 100%;
  }

  > input {
    margin: 0;
    position: absolute;
    left: var(--left);
    appearance: none;
    border: none;
  }
  > input.increment {
    width: 100%;
    height: 100%;
    inset: 0;
    border-radius: 50%;
    cursor: pointer;
    &:first-child {
      left: 0;
    }
    &:checked {
      counter-increment: cookies 1;
      left: var(--left);
      + input.increment:not(:checked) {
        left: 0;
        + input.increment:not(:checked) {
          left: var(--left);
        }
      }
    }
  }
}

#shop {
  position: absolute;
  top: 0;
  left: 200px;
  width: 200px;
  border: 1px dotted black;
  padding: 10px;
  > .items {
    margin-top: 10px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    > div {
      > input {
        position: absolute;
        left: var(--left);
        appearance: none;
      }
      > button {
        width: 100%;
        background-color: gray;
        cursor: not-allowed;
        border: none;
        padding: 0;
        position: relative;
        height: 30px;
        > label {
          display: block;
          width: 100%;
          height: 100%;
          position: absolute;
          top: 0;
          left: var(--left);
          cursor: pointer;
        }
      }
    }
  }
}

@function pow($base, $exponents) {
  $raised: 1;
  @for $i from 1 through $exponents {
    $raised: $raised * $base;
  }
  @return $raised;
}
@function binary-hit($n, $digit) {
  $binary: $n;
  @for $i from 1 to $digit {
    $binary: math.floor(math.div($binary, 2));
  }
  @return $binary % 2 == 1;
}

@mixin shop-items($map-array) {
  @each $map in $map-array {
    $index: map-get($map, index);
    $item-name: map-get($map, name);
    $price: map-get($map, price);

    #shop > .items > .item#{$index} > span::after {
      content: $item-name + "：" + $price + "枚"
    }

    $other-map-array: ();
    @each $other-map in $map-array {
      @if map-get($other-map, index) != $index {
        $other-map-array: append($other-map-array, $other-map);
      }
    }

    $buyable-selectors: "";
    $loop-count: pow(2, length($other-map-array));
    @for $i from 0 to $loop-count {
      $required: $price;
      @for $j from 1 through length($other-map-array) {
        @if binary-hit($i, $j) {
          $other-map: nth($other-map-array, $j);
          $required: $required + map-get($other-map, price);
        }
      }
      $selector: "";
      @for $j from 1 through $required {
        @if $j < $required {
          $selector: $selector + "input.increment:checked + ";
        } @else {
          $selector: $selector + "input.increment:checked ~ ";
        }
      }
      @for $j from 1 through length($other-map-array) {
        $other-map: nth($other-map-array, $j);
        // input#item1
        $selector: $selector + "input#item" + map-get($other-map, index);
        @if binary-hit($i, $j) {
          // input#item1:checked +
          $selector: $selector + ":checked ~ ";
        } @else {
          // input#item1:not(:checked) +
          $selector: $selector + ":not(:checked) ~ ";
        }
      }
      $selector: $selector + "#shop > .items > .item" + $index + " > button";
      @if $i < $loop-count - 1 {
        $selector: $selector + ", ";
      }
      $buyable-selectors: $buyable-selectors + $selector;
    }

    #{$buyable-selectors} {
      background-color: skyblue;
      > label {
        left: 0;
      }
    }

    #item#{$index}:checked {
      counter-increment: cookies -#{$price};
      ~ #shop > .items > .item#{$index} {
        > button {
          > span::after {
            content: "済み";
          }
          > label {
            left: var(--left);
          }
        }
      }
    }
  }
}

$item1: (index: 1, name: "Special Cookie 1", price: 5);
$item2: (index: 2, name: "Special Cookie 2", price: 10);
$item3: (index: 3, name: "Special Cookie 3", price: 10);
$item4: (index: 4, name: "Special Cookie 4", price: 15);
@include shop-items(($item1, $item2, $item3, $item4));
